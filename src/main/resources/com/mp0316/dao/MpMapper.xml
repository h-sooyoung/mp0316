<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.mp0316.dao.MpMapper">
	<select id="selectCgradeList" resultType="com.mp0316.dto.CgradeDTO">
		select * from cgrade order by cgrade_seq
	</select>
	<select id="selectMcStatusList" resultType="com.mp0316.dto.McStatusDTO">
		select * from mcstatus order by mcstatus_seq
	</select>
	<select id="selectGenList" resultType="com.mp0316.dto.GenDTO">
		select * from gen order by gen_seq
	</select>
	<select id="selectCompanyByMember_seq" resultType="com.mp0316.dto.CompanyDTO" parameterType="int">
		select * from company where member_seq = #{member_seq} order by company_seq
	</select>
	<select id="selectCompanyByCompany_seq" resultType="com.mp0316.dto.CompanyDTO" parameterType="int">
		select * from company where company_seq = #{company_seq}
	</select>
	<insert id="insertMcard" parameterType="com.mp0316.dto.McardDTO">
		insert into mcard(
			mcard_seq,
			member_seq,
			name,
			phone,
			tel,
			fax,
			email,
			gender,
			grade,
			cname,
			addr1,
			addr2,
			status		
		) values(
			mcard_seq.nextval,
			#{member_seq},
			#{name},
			#{phone},
			#{tel},
			#{fax},
			#{email},
			#{gender},
			#{grade},
			#{cname},
			#{addr1},
			#{addr2},
			#{status}
		)
	</insert>
	<insert id="insertCompany" parameterType="com.mp0316.dto.CompanyDTO">
		insert into company(
			company_seq,
			member_seq,
			name,
			addr1,
			addr2	
		) values(
			company_seq.nextval,
			#{member_seq},
			#{name},
			#{addr1},
			#{addr2}
		)
	</insert>
	<select id="selectMcardOpenList" resultType="com.mp0316.dto.McardDTO">
		select * from (
		    select rownum r, a.* from (
		        select distinct
		            m.*,
		            g.name as sgender,
		            cg.name as sgrade,
		            c.name as scname
		        from mcard m, gen g, cgrade cg, company c
		        where m.gender = g.gen_seq and
		            m.grade = cg.cgrade_seq and
		            m.cname = c.company_seq
		        order by mcard_seq
		    ) a 
		) where r between #{startNum} and #{endNum}
	</select>
	<select id="countMcardOpenList" resultType="int">
		    select distinct
		        count(*)
		    from mcard m, gen g, cgrade cg, company c
		    where m.gender = g.gen_seq and
		        m.grade = cg.cgrade_seq and
		        m.cname = c.company_seq
		    order by mcard_seq
	</select>
	<select id="selectMcardDTOBySeq" parameterType="int" resultType="com.mp0316.dto.McardDTO">
		select distinct
		    m.*,
		    g.name as sgender,
		    cg.name as sgrade,
		    c.name as scname,
		    ms.name as sstatus
		from mcard m, gen g, cgrade cg, company c, mcstatus ms
		where m.gender = g.gen_seq and
		    m.grade = cg.cgrade_seq and
		    m.cname = c.company_seq and
		    m.status = ms.mcstatus_seq(+) and
		    m.mcard_seq = #{mcard_seq}
	</select>
	<update id="updateMcard" parameterType="com.mp0316.dto.McardDTO">
		update mcard set
			phone = #{phone},
			tel = #{tel},
			fax = #{fax},
			email = #{email},
			grade = #{grade},
			cname = #{cname},
			addr1 = #{addr1},
			addr2 = #{addr2},
			status = #{status}
		where mcard_seq = #{mcard_seq}
	</update>
	<select id="searchMcardList" resultType="com.mp0316.dto.McardDTO">
		select * from (
		    select rownum r, a.* from (
		        select * from (
		            select distinct
		                m.*,
		                g.name as sgender,
		                cg.name as sgrade,
		                c.name as scname
		            from mcard m, gen g, cgrade cg, company c
		            where m.gender = g.gen_seq and
		                m.grade = cg.cgrade_seq and
		                m.cname = c.company_seq
		        ) where ${searchCol} like '%'||#{searchValue}||'%'
		        order by mcard_seq
		    ) a 
		) where r between #{startNum} and #{endNum}
	</select>
	<select id="countSearchMcardList" resultType="int">
		select count(*) from (
		        select * from (
		            select distinct
		                m.*,
		                g.name as sgender,
		                cg.name as sgrade,
		                c.name as scname
		            from mcard m, gen g, cgrade cg, company c
		            where m.gender = g.gen_seq and
		                m.grade = cg.cgrade_seq and
		                m.cname = c.company_seq
		        ) where ${searchCol} like '%'||#{searchValue}||'%'
		    )
	</select>
	<delete id="delete1CompanyBySeq" parameterType="int">
		delete from company where company_seq = #{company_seq}
	</delete>
	<update id="updateCompany" parameterType="com.mp0316.dto.CompanyDTO">
		update company set
			name = #{name},
			addr1 = #{addr1},
			addr2 = #{addr2}
		where company_seq = #{company_seq}
	</update>
</mapper>